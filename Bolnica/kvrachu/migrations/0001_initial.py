# Generated by Django 4.2.4 on 2023-09-20 14:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор', primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('name', models.CharField(help_text='Название специальности', max_length=60, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Название рсписания', max_length=20)),
                ('monday', models.CharField(help_text='Расписание на пондельник', max_length=15)),
                ('tuesday', models.CharField(help_text='Расписание на вторник', max_length=15)),
                ('wednesday', models.CharField(help_text='Расписание на среду', max_length=15)),
                ('thursday', models.CharField(help_text='Расписание на четверг', max_length=15)),
                ('friday', models.CharField(help_text='Расписание на пятницу', max_length=15)),
                ('saturday', models.CharField(help_text='Расписание на субботу', max_length=15)),
                ('sunday', models.CharField(help_text='Расписание на воскресенье', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор', primary_key=True, serialize=False)),
                ('doctor_has_patient', models.ManyToManyField(to='kvrachu.doctor')),
                ('user_is_patient', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KartaBolezni',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор', primary_key=True, serialize=False)),
                ('bolezn', models.CharField(help_text='Название больницы', max_length=45)),
                ('desription', models.TextField(help_text='Описание болезни')),
                ('patient', models.ForeignKey(help_text='Пациент', on_delete=django.db.models.deletion.PROTECT, to='kvrachu.patients')),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Уникальный идентификатор', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Название больницы', max_length=80)),
                ('number', models.IntegerField(help_text='Номер больницы')),
                ('time_table_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='kvrachu.timetable')),
            ],
        ),
        migrations.AddField(
            model_name='doctor',
            name='hospital_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='kvrachu.hospital'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='speciality_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='kvrachu.speciality'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='time_table_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='kvrachu.timetable'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user_is_doctor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
    ]
